<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ConfigDucking</class>
 <widget class="QDialog" name="ConfigDucking">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>470</width>
    <height>420</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string notr="true">CrossTalk: Ducking</string>
  </property>
  <widget class="QWidget" name="horizontalLayoutWidget">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>80</y>
     <width>451</width>
     <height>331</height>
    </rect>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout">
    <item>
     <widget class="QGroupBox" name="groupBox_gDuck">
      <property name="font">
       <font>
        <family>Times New Roman</family>
        <pointsize>12</pointsize>
        <weight>50</weight>
        <bold>false</bold>
       </font>
      </property>
      <property name="toolTip">
       <string/>
      </property>
      <property name="whatsThis">
       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The Global (Music Bots, Very Unimportant Persons) Ducking module enables you to add global ducking targets via the clients context menu.&lt;/p&gt;&lt;p&gt;Those will get ducked by any other audio stream, no matter the origin.&lt;/p&gt;&lt;p&gt;Global Ducking Targets are ignored by the Channel Ducking module.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="autoFillBackground">
       <bool>true</bool>
      </property>
      <property name="title">
       <string notr="true">Global (music bots)</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
      <property name="checked">
       <bool>false</bool>
      </property>
      <widget class="FaderVertical" name="wFader_gDuck" native="true">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>80</y>
         <width>120</width>
         <height>240</height>
        </rect>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
      </widget>
     </widget>
    </item>
    <item>
     <widget class="QGroupBox" name="groupBox_cDuck">
      <property name="font">
       <font>
        <family>Times New Roman</family>
        <pointsize>12</pointsize>
        <weight>50</weight>
        <bold>false</bold>
       </font>
      </property>
      <property name="toolTip">
       <string/>
      </property>
      <property name="whatsThis">
       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;Home Channel Ducking&lt;/span&gt;&lt;/p&gt;&lt;p&gt;To find out about Ducking, whatsThis? the Ducking module.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span style=&quot; text-decoration: underline;&quot;&gt;In short:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Per default reduces the volume of speakers in the channel of the currently active server tab as soon as a whisper comes in or someone talks on another server tab (in common scenarios this is some kind of commander channel).&lt;/p&gt;&lt;p&gt;Target: Your &amp;quot;home&amp;quot; channel. That's what I call the channel of your currently active server tab.&lt;/p&gt;&lt;p&gt;Sources: Whispers and everything that's coming in from another server tab.&lt;/p&gt;&lt;p&gt;You can switch the target in so far, that:&lt;/p&gt;&lt;p&gt;Target: Talking on another server tab&lt;/p&gt;&lt;p&gt;Sources: Your &amp;quot;home&amp;quot; channel and any whispers&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="autoFillBackground">
       <bool>true</bool>
      </property>
      <property name="title">
       <string>Channel</string>
      </property>
      <property name="checkable">
       <bool>true</bool>
      </property>
      <property name="checked">
       <bool>false</bool>
      </property>
      <widget class="QSlider" name="slider_cDuck_Mode">
       <property name="geometry">
        <rect>
         <x>65</x>
         <y>40</y>
         <width>31</width>
         <height>24</height>
        </rect>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="maximum">
        <number>1</number>
       </property>
       <property name="pageStep">
        <number>1</number>
       </property>
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="tickPosition">
        <enum>QSlider::TicksBelow</enum>
       </property>
       <property name="tickInterval">
        <number>1</number>
       </property>
      </widget>
      <widget class="QLabel" name="label_cDuck_Target_Dyn">
       <property name="geometry">
        <rect>
         <x>110</x>
         <y>40</y>
         <width>151</width>
         <height>13</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <italic>true</italic>
        </font>
       </property>
       <property name="autoFillBackground">
        <bool>false</bool>
       </property>
       <property name="frameShape">
        <enum>QFrame::NoFrame</enum>
       </property>
       <property name="text">
        <string notr="true">TextLabel</string>
       </property>
      </widget>
      <widget class="QLabel" name="label_cDuck_Target_Fix">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>40</y>
         <width>46</width>
         <height>13</height>
        </rect>
       </property>
       <property name="text">
        <string>Target</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
       </property>
      </widget>
      <widget class="FaderVertical" name="wFader_cDuck" native="true">
       <property name="geometry">
        <rect>
         <x>50</x>
         <y>80</y>
         <width>120</width>
         <height>240</height>
        </rect>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="BannerFrame" name="banner_frame">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>470</width>
     <height>62</height>
    </rect>
   </property>
   <property name="frameShape">
    <enum>QFrame::Panel</enum>
   </property>
   <property name="frameShadow">
    <enum>QFrame::Raised</enum>
   </property>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>FaderVertical</class>
   <extends>QWidget</extends>
   <header>fader_vertical.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>BannerFrame</class>
   <extends>QFrame</extends>
   <header>banner_frame.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
